#!/bin/bash

set -e
set -o pipefail

rmfilecmd=rm
dir=
minfree=0
dryrun=
mtimearg=
lockdir=
findargs=()

while [ $# != 0 ]; do
    case $1 in
    --findargs)
    shift
    while [ $# != 0 ]; do
        case $1 in
        --findargs-end)
        shift
        break
        ;;
        *)
        findargs+=( "$1" )
        shift
        ;;
        esac
    done
    ;;
    --dry-run)
    dryrun=x
    shift
    ;;
    --mtime)
    mtimearg="-mtime ${2:?}"
    shift 2
    ;;
    --lockdir)
    lockdir=x
    shift
    ;;
    --rmfilecmd)
    rmfilecmd=${2:?}
    shift 2
    ;;
    --clobber)
    rmfilecmd=clobber
    shift
    ;;
    --dir)
    dir=${2:?}
    shift 2
    ;;
    --minfree)
    minfree=${2:?}
    shift 2
    ;;
    *)
    >&2 echo bad args: $1
    exit 1
    ;;
    esac
done

if [ "$lockdir" ]; then
    exec 5<"${dir:?}"
    echo "trying to lock directory"
    flock -w 60 5 && echo "directory locked" || >&2 echo "directory lock failed"
fi

{
read s &&
read Filesystem Size  Used Avail Use Mounted
} <<<"$(LC_ALL=C df -Ph -BK "${dir:?}")" || { >&2 echo "read df output failed"; exit 1; }

clobber() {
    >"${1:?}"
}

fn_fromhuman() {
    local res
    eval "res=\$${1:?}"
    case $res in
    *[0-9])  : ;;
    *[0-9]K) res=$(( ${res%?} * 1024));;
    *[0-9]M) res=$(( ${res%?} * 1024 * 1024));;
    *[0-9]G) res=$(( ${res%?} * 1024 * 1024 * 1024));;
    *) >&2 echo bad size: $res; return 1;;
    esac
    eval "$1=\$res"
}

fn_fromhuman minfree
fn_fromhuman Used
fn_fromhuman Size
fn_fromhuman Avail

freeup=$(( minfree - Avail ))

fmt='%-10s= %12d\n'

[ ${#findargs[@]} = 0 ] || findargs=( "(" "${findargs[@]}" ")" )

printf '%-10s= %s\n' "dir" "$dir"
printf "$fmt" "Size" "$Size"
printf "$fmt" "Used" "$Used"
printf "$fmt" "Avail" "$Avail"
printf "$fmt" "minfree" "$minfree"
printf '%-10s= %s\n' "findargs" "${findargs[*]}"

if [ $freeup -gt 0 ]; then
    printf "$fmt" "freeup" "$freeup"
    #TODO: declare -A links_by_inode
    cd "$dir"
    exec 4< <(find . -mount -path ./lost+found -prune -o ! -path "./lost+found*" ! -path "." ! -path "./.cleandisk.lock" $mtimearg "${findargs[@]}" -printf '%b %i %n %y %T@ %p\0' | LC_ALL=C sort -z -k5,5 -k6r )
    while read -d '' -r sz inode nlinks type mtime p <&4; do
        sz=$((sz*512))
        echo "deleting $p (type=$type, mtime='`date -d @$mtime`')"
        case $type in
        d) rmcmd=rmdir;;
        f) rmcmd=${rmfilecmd:?};;
        *) rmcmd=rm;;
        esac
        [ "$dryrun" ] && rmcmd="echo $rmcmd"
        if $rmcmd "$p"; then
            freeup=$((freeup - sz))
            [ $freeup -gt 0 ] || break
        fi
    done
fi
